# Visual Regression Testing Pipeline
name: Visual Regression Tests

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      update_baseline:
        description: 'Update baseline screenshots'
        required: false
        default: 'false'
        type: boolean

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '18.x'

jobs:
  # Visual Regression Tests
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        viewport: [desktop, tablet, mobile]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Restore dependencies
        run: dotnet restore Source/
      
      - name: Build solution
        run: dotnet build Source/ --no-restore --configuration Release
      
      - name: Start services
        run: |
          cd Source
          dotnet run --project AppHost &
          sleep 30
          
          # Verify services are running
          curl -f http://localhost:5001/health || exit 1
          curl -f http://localhost:5002/health || exit 1
      
      - name: Cache baseline screenshots
        uses: actions/cache@v3
        with:
          path: tests/visual-regression/baselines
          key: visual-baselines-${{ matrix.browser }}-${{ matrix.viewport }}-${{ hashFiles('Source/**/*.razor', 'Source/**/*.css') }}
          restore-keys: |
            visual-baselines-${{ matrix.browser }}-${{ matrix.viewport }}-
      
      - name: Run Visual Regression Tests
        env:
          BROWSER: ${{ matrix.browser }}
          VIEWPORT: ${{ matrix.viewport }}
          UPDATE_BASELINE: ${{ github.event.inputs.update_baseline }}
        run: |
          # Create visual regression test configuration
          cat > tests/visual-config.json << EOF
          {
            "browser": "${{ matrix.browser }}",
            "viewport": "${{ matrix.viewport }}",
            "updateBaseline": "${{ github.event.inputs.update_baseline }}",
            "threshold": 0.2,
            "baseUrl": "http://localhost:5001"
          }
          EOF
          
          # Run visual regression tests
          ./scripts/mcp-tools-integration.sh visual-tests all
      
      - name: Generate Visual Regression Report
        if: always()
        run: |
          mkdir -p visual-reports
          
          cat > visual-reports/summary-${{ matrix.browser }}-${{ matrix.viewport }}.md << EOF
          # Visual Regression Report
          
          **Browser**: ${{ matrix.browser }}
          **Viewport**: ${{ matrix.viewport }}
          **Date**: $(date)
          **Commit**: ${{ github.sha }}
          
          ## Test Results
          
          Visual regression tests completed for ${{ matrix.browser }} on ${{ matrix.viewport }} viewport.
          
          ### Components Tested
          - Button components (all variants)
          - Form controls
          - Navigation components
          - Page layouts
          - Modal dialogs
          - Data tables
          
          ### Screenshots
          - Baseline screenshots: \`tests/visual-regression/baselines/\`
          - Current screenshots: \`tests/visual-regression/current/\`
          - Diff screenshots: \`tests/visual-regression/diffs/\`
          
          ### Threshold
          - Difference threshold: 0.2%
          - Pixel tolerance: 1px
          
          ## Actions
          
          If visual differences are detected:
          1. Review diff screenshots in artifacts
          2. Verify changes are intentional
          3. Update baselines if approved
          4. Re-run tests to confirm
          
          EOF
      
      - name: Upload Visual Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: visual-results-${{ matrix.browser }}-${{ matrix.viewport }}
          path: |
            tests/visual-regression/
            visual-reports/
            assets/playwright-screenshots/
          retention-days: 30
      
      - name: Comment on PR with Visual Changes
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if visual differences exist
            const diffPath = 'tests/visual-regression/diffs';
            let hasDifferences = false;
            
            if (fs.existsSync(diffPath)) {
              const files = fs.readdirSync(diffPath);
              hasDifferences = files.length > 0;
            }
            
            if (hasDifferences) {
              const comment = `## 🎨 Visual Regression Results
              
              **Browser**: ${{ matrix.browser }}
              **Viewport**: ${{ matrix.viewport }}
              
              ⚠️ Visual differences detected in this PR.
              
              Please review the visual regression artifacts to verify the changes are intentional.
              
              ### Next Steps
              1. Download the visual regression artifacts
              2. Review the diff screenshots
              3. If changes are approved, update the baseline screenshots
              4. Re-run the tests to confirm
              
              ### Artifacts
              - Visual test results are available in the workflow artifacts
              - Diff screenshots show the exact changes
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  # Consolidate Results
  consolidate-results:
    name: Consolidate Visual Results
    runs-on: ubuntu-latest
    needs: visual-regression
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: visual-results
      
      - name: Generate Consolidated Report
        run: |
          mkdir -p consolidated-report
          
          cat > consolidated-report/visual-regression-summary.md << EOF
          # Visual Regression Test Summary
          
          **Workflow**: ${{ github.workflow }}
          **Trigger**: ${{ github.event_name }}
          **Branch**: ${{ github.ref_name }}
          **Commit**: ${{ github.sha }}
          **Date**: $(date)
          
          ## Test Matrix
          
          | Browser | Viewport | Status |
          |---------|----------|--------|
          | Chromium | Desktop | ${{ needs.visual-regression.result }} |
          | Chromium | Tablet | ${{ needs.visual-regression.result }} |
          | Chromium | Mobile | ${{ needs.visual-regression.result }} |
          | Firefox | Desktop | ${{ needs.visual-regression.result }} |
          | Firefox | Tablet | ${{ needs.visual-regression.result }} |
          | Firefox | Mobile | ${{ needs.visual-regression.result }} |
          | WebKit | Desktop | ${{ needs.visual-regression.result }} |
          | WebKit | Tablet | ${{ needs.visual-regression.result }} |
          | WebKit | Mobile | ${{ needs.visual-regression.result }} |
          
          ## Artifacts
          
          Visual regression test results are available in the workflow artifacts:
          - Individual browser/viewport results
          - Screenshot comparisons
          - Diff images for detected changes
          
          ## Actions
          
          If visual differences are found:
          1. Review the diff screenshots in artifacts
          2. Verify changes are intentional design updates
          3. Update baseline screenshots if approved
          4. Re-run tests to confirm updates
          
          ## Configuration
          
          - **Difference Threshold**: 0.2%
          - **Pixel Tolerance**: 1px
          - **Baseline Update**: ${{ github.event.inputs.update_baseline || 'false' }}
          
          EOF
      
      - name: Upload Consolidated Report
        uses: actions/upload-artifact@v3
        with:
          name: visual-regression-summary
          path: consolidated-report/
          retention-days: 30
      
      - name: Add Summary to Job Output
        run: |
          cat consolidated-report/visual-regression-summary.md >> $GITHUB_STEP_SUMMARY

  # Update Baselines (Manual Trigger)
  update-baselines:
    name: Update Baseline Screenshots
    runs-on: ubuntu-latest
    if: github.event.inputs.update_baseline == 'true'
    needs: visual-regression
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download visual results
        uses: actions/download-artifact@v3
        with:
          path: visual-results
      
      - name: Update baseline screenshots
        run: |
          # Update baseline screenshots from current results
          find visual-results -name "current" -type d | while read dir; do
            browser_viewport=$(echo $dir | sed 's/.*visual-results-//' | sed 's/\/tests.*//')
            
            if [ -d "$dir" ]; then
              echo "Updating baselines for $browser_viewport"
              mkdir -p "tests/visual-regression/baselines/$browser_viewport"
              cp -r "$dir"/* "tests/visual-regression/baselines/$browser_viewport/"
            fi
          done
      
      - name: Commit updated baselines
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add tests/visual-regression/baselines/
          
          if git diff --staged --quiet; then
            echo "No baseline changes to commit"
          else
            git commit -m "Update visual regression baselines"
            git push
          fi
      
      - name: Create baseline update summary
        run: |
          echo "# Baseline Screenshots Updated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Visual regression baseline screenshots have been updated." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Updated**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Re-run visual regression tests to confirm updates" >> $GITHUB_STEP_SUMMARY
          echo "2. Verify all tests now pass with updated baselines" >> $GITHUB_STEP_SUMMARY
          echo "3. Update team about baseline changes" >> $GITHUB_STEP_SUMMARY