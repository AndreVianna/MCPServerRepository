{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "rules": {
    // Prettier integration
    "prettier/prettier": "error",
    
    // TypeScript specific rules
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/type-annotation-spacing": "error",
    
    // General JavaScript/TypeScript rules
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "no-alert": "error",
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",
    "no-return-await": "error",
    "prefer-const": "error",
    "prefer-arrow-callback": "error",
    "prefer-template": "error",
    "prefer-destructuring": ["error", { "object": true, "array": false }],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "object-shorthand": "error",
    "quote-props": ["error", "as-needed"],
    "no-var": "error",
    "no-duplicate-imports": "error",
    "no-useless-constructor": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-escape": "error",
    "no-nested-ternary": "error",
    "no-unneeded-ternary": "error",
    "no-mixed-operators": "error",
    "no-multi-assign": "error",
    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
    "no-bitwise": "error",
    "no-continue": "error",
    "no-lonely-if": "error",
    "no-else-return": "error",
    "no-param-reassign": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": "error",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "no-return-assign": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-void": "error",
    "no-with": "error",
    "yoda": "error",
    "wrap-iife": "error",
    "vars-on-top": "error",
    "strict": ["error", "never"],
    "radix": "error",
    "no-iterator": "error",
    "no-proto": "error",
    "no-extend-native": "error",
    "no-caller": "error",
    "no-new-wrappers": "error",
    "no-new-object": "error",
    "no-array-constructor": "off",
    "no-new": "error",
    "no-label-var": "error",
    "no-implicit-globals": "error",
    "no-implicit-coercion": "error",
    "no-eq-null": "error",
    "eqeqeq": "error",
    "dot-notation": "error",
    "curly": "error",
    "consistent-return": "error",
    "complexity": ["warn", 10],
    "block-scoped-var": "error",
    "array-callback-return": "error",
    "accessor-pairs": "error",
    
    // Import rules
    "import/no-unresolved": "off", // TypeScript handles this
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    
    // Naming conventions
    "camelcase": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enum",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"]
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"]
      },
      {
        "selector": "class",
        "format": ["PascalCase"]
      },
      {
        "selector": "method",
        "format": ["camelCase"]
      },
      {
        "selector": "property",
        "format": ["camelCase"]
      },
      {
        "selector": "accessor",
        "format": ["camelCase"]
      },
      {
        "selector": "function",
        "format": ["camelCase"]
      }
    ],
    
    // Documentation
    "valid-jsdoc": "off",
    "require-jsdoc": "off",
    
    // Error handling
    "no-empty": ["error", { "allowEmptyCatch": false }],
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-parens": "off",
    "@typescript-eslint/no-extra-parens": ["error", "all", { "ignoreJSX": "all" }],
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "error",
    "no-func-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-obj-calls": "error",
    "no-sparse-arrays": "error",
    "no-unreachable": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    
    // Best practices
    "no-case-declarations": "error",
    "no-empty-pattern": "error",
    "no-fallthrough": "error",
    "no-global-assign": "error",
    "no-octal": "error",
    "no-self-assign": "error",
    "no-unused-labels": "error",
    "no-useless-catch": "error",
    "no-delete-var": "error",
    "no-undef": "error",
    "no-unused-vars": "off" // Handled by TypeScript
  },
  "overrides": [
    {
      "files": ["*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    },
    {
      "files": ["*.test.ts", "*.test.js", "*.spec.ts", "*.spec.js"],
      "env": {
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "no-console": "off"
      }
    },
    {
      "files": ["*.d.ts"],
      "rules": {
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json"
      }
    }
  }
}