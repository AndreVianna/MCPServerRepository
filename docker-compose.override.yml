version: '3.8'

# Override file for development environment
# This file is automatically used by Docker Compose and provides development-specific configurations

services:
  webapp:
    build:
      target: development
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - DOTNET_HOTRELOAD_ENABLED=true
    volumes:
      - ./Source/WebApp:/app/Source/WebApp:delegated
      - ./Source/Domain:/app/Source/Domain:delegated
      - ./Source/Common:/app/Source/Common:delegated
      - ./Source/Core:/app/Source/Core:delegated
      - ./Source/Data:/app/Source/Data:delegated
      - dotnet-packages:/root/.nuget/packages
      - node-modules:/app/node_modules
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp.rule=Host(`mcphub.local`)"
      - "traefik.http.routers.webapp.entrypoints=web"
      - "traefik.http.services.webapp.loadbalancer.server.port=5000"

  publicapi:
    build:
      target: development
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - DOTNET_HOTRELOAD_ENABLED=true
    volumes:
      - ./Source/PublicApi:/app/Source/PublicApi:delegated
      - ./Source/Domain:/app/Source/Domain:delegated
      - ./Source/Common:/app/Source/Common:delegated
      - ./Source/Core:/app/Source/Core:delegated
      - ./Source/Data:/app/Source/Data:delegated
      - dotnet-packages:/root/.nuget/packages
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.publicapi.rule=Host(`api.mcphub.local`)"
      - "traefik.http.routers.publicapi.entrypoints=web"
      - "traefik.http.services.publicapi.loadbalancer.server.port=8080"

  securityservice:
    build:
      target: development
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - DOTNET_HOTRELOAD_ENABLED=true
    volumes:
      - ./Source/SecurityService:/app/Source/SecurityService:delegated
      - ./Source/Domain:/app/Source/Domain:delegated
      - ./Source/Common:/app/Source/Common:delegated
      - ./Source/Core:/app/Source/Core:delegated
      - ./Source/Data:/app/Source/Data:delegated
      - dotnet-packages:/root/.nuget/packages
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.securityservice.rule=Host(`security.mcphub.local`)"
      - "traefik.http.routers.securityservice.entrypoints=web"
      - "traefik.http.services.securityservice.loadbalancer.server.port=8082"

  searchservice:
    build:
      target: development
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - DOTNET_HOTRELOAD_ENABLED=true
    volumes:
      - ./Source/SearchService:/app/Source/SearchService:delegated
      - ./Source/Domain:/app/Source/Domain:delegated
      - ./Source/Common:/app/Source/Common:delegated
      - ./Source/Core:/app/Source/Core:delegated
      - ./Source/Data:/app/Source/Data:delegated
      - dotnet-packages:/root/.nuget/packages
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.searchservice.rule=Host(`search.mcphub.local`)"
      - "traefik.http.routers.searchservice.entrypoints=web"
      - "traefik.http.services.searchservice.loadbalancer.server.port=8083"

  postgres:
    environment:
      - POSTGRES_DB=mcphub_dev
      - POSTGRES_USER=mcphub_user
      - POSTGRES_PASSWORD=mcphub_dev_password
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./Scripts/dev-init.sql:/docker-entrypoint-initdb.d/dev-init.sql
    ports:
      - "5432:5432"
    labels:
      - "traefik.enable=false"

  redis:
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-dev-data:/data
    labels:
      - "traefik.enable=false"

  elasticsearch:
    environment:
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    volumes:
      - elasticsearch-dev-data:/usr/share/elasticsearch/data
    labels:
      - "traefik.enable=false"

  qdrant:
    volumes:
      - qdrant-dev-data:/qdrant/storage
    labels:
      - "traefik.enable=false"

  rabbitmq:
    volumes:
      - rabbitmq-dev-data:/var/lib/rabbitmq
    labels:
      - "traefik.enable=false"

  jaeger:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.mcphub.local`)"
      - "traefik.http.routers.jaeger.entrypoints=web"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"

  prometheus:
    volumes:
      - ./Monitoring/prometheus-dev.yml:/etc/prometheus/prometheus.yml
      - prometheus-dev-data:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.mcphub.local`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=dev
      - GF_USERS_ALLOW_SIGN_UP=true
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana-dev-data:/var/lib/grafana
      - ./Monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./Monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.mcphub.local`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  pgadmin:
    environment:
      - PGADMIN_DEFAULT_EMAIL=dev@mcphub.local
      - PGADMIN_DEFAULT_PASSWORD=dev
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-dev-data:/var/lib/pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.mcphub.local`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  redis-commander:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-commander.rule=Host(`redis.mcphub.local`)"
      - "traefik.http.routers.redis-commander.entrypoints=web"
      - "traefik.http.services.redis-commander.loadbalancer.server.port=8081"

  # Traefik reverse proxy for development
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addRoutersLabels=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - mcphub-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.mcphub.local`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - mcphub-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mail.mcphub.local`)"
      - "traefik.http.routers.mailhog.entrypoints=web"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

  # Seq for structured logging
  seq:
    image: datalust/seq:2023.4
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "5342:80"
    volumes:
      - seq-dev-data:/data
    networks:
      - mcphub-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seq.rule=Host(`seq.mcphub.local`)"
      - "traefik.http.routers.seq.entrypoints=web"
      - "traefik.http.services.seq.loadbalancer.server.port=80"

  # Portainer for Docker management
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-dev-data:/data
    networks:
      - mcphub-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.mcphub.local`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

volumes:
  postgres-dev-data:
    driver: local
  redis-dev-data:
    driver: local
  elasticsearch-dev-data:
    driver: local
  qdrant-dev-data:
    driver: local
  rabbitmq-dev-data:
    driver: local
  prometheus-dev-data:
    driver: local
  grafana-dev-data:
    driver: local
  pgadmin-dev-data:
    driver: local
  seq-dev-data:
    driver: local
  portainer-dev-data:
    driver: local
  dotnet-packages:
    driver: local
  node-modules:
    driver: local