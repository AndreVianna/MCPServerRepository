{
  "name": "mcphub",
  "version": "1.0.0",
  "description": "MCP Hub - A comprehensive MCP (Model Context Protocol) server registration repository",
  "main": "index.js",
  "scripts": {
    "dev": "Scripts/dev.sh",
    "build": "Scripts/build.sh",
    "test": "Scripts/test.sh",
    "test:unit": "Scripts/test.sh --unit",
    "test:integration": "Scripts/test.sh --integration",
    "test:e2e": "Scripts/test.sh --e2e",
    "test:watch": "Scripts/test.sh --watch",
    "test:coverage": "Scripts/test.sh --coverage",
    "lint": "eslint . --ext .js,.ts,.jsx,.tsx",
    "lint:fix": "eslint . --ext .js,.ts,.jsx,.tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit",
    "clean": "rm -rf build dist out TestResults test-results playwright-report",
    "setup": "Scripts/dev-setup.sh",
    "migrate": "Scripts/migrate.sh",
    "scaffold": "Scripts/scaffold.sh",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --remove-orphans",
    "playwright:install": "npx playwright install --with-deps",
    "playwright:test": "npx playwright test",
    "playwright:test:ui": "npx playwright test --ui",
    "playwright:codegen": "npx playwright codegen",
    "playwright:report": "npx playwright show-report",
    "audit": "npm audit --audit-level=high",
    "audit:fix": "npm audit fix",
    "outdated": "npm outdated",
    "update": "npm update",
    "deps:check": "npm-check-updates",
    "deps:update": "npm-check-updates -u && npm install",
    "precommit": "lint-staged",
    "prepare": "husky install",
    "ci:build": "npm run build",
    "ci:test": "npm run test",
    "ci:lint": "npm run lint",
    "ci:format": "npm run format:check",
    "ci:typecheck": "npm run typecheck",
    "ci:audit": "npm run audit",
    "release": "standard-version",
    "release:minor": "standard-version --release-as minor",
    "release:major": "standard-version --release-as major",
    "release:patch": "standard-version --release-as patch",
    "publish": "npm publish",
    "docs:build": "typedoc",
    "docs:serve": "http-server docs -p 8080",
    "analyze": "npm run build && npx webpack-bundle-analyzer build/static/js/*.js",
    "profile": "npm run build && npx webpack-bundle-analyzer build/static/js/*.js --mode=server",
    "size": "npm run build && size-limit",
    "perf": "npm run build && lighthouse http://localhost:3000 --output=json --output-path=lighthouse-report.json",
    "lighthouse": "lighthouse http://localhost:3000 --output=html --output-path=lighthouse-report.html",
    "benchmark": "npm run build && node benchmark.js",
    "stress": "npm run build && Artillery quick --duration 60 --rate 10 http://localhost:3000",
    "load": "npm run build && Artillery run artillery.yml",
    "security": "npm audit && snyk test",
    "security:fix": "npm audit fix && snyk wizard",
    "monitor": "snyk monitor",
    "validate": "npm run lint && npm run typecheck && npm run test && npm run format:check",
    "heroku-postbuild": "npm run build",
    "vercel-build": "npm run build",
    "netlify-build": "npm run build",
    "gh-pages": "npm run build && gh-pages -d build",
    "deploy": "npm run build && npm run deploy:production",
    "deploy:staging": "npm run build && echo 'Deploy to staging'",
    "deploy:production": "npm run build && echo 'Deploy to production'",
    "backup": "echo 'Backup database'",
    "restore": "echo 'Restore database'",
    "seed": "echo 'Seed database'",
    "reset": "echo 'Reset database'",
    "fixtures": "echo 'Load fixtures'",
    "demo": "echo 'Load demo data'",
    "workers": "echo 'Start workers'",
    "queue": "echo 'Start queue'",
    "scheduler": "echo 'Start scheduler'",
    "cache": "echo 'Clear cache'",
    "logs": "echo 'View logs'",
    "metrics": "echo 'View metrics'",
    "health": "echo 'Health check'",
    "info": "echo 'System info'",
    "version": "echo 'Version info'",
    "help": "echo 'Help'"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "registry",
    "package-manager",
    "nuget",
    "npm",
    "aspire",
    "blazor",
    "dotnet",
    "csharp",
    "typescript",
    "javascript",
    "react",
    "postgresql",
    "redis",
    "elasticsearch",
    "qdrant",
    "rabbitmq",
    "docker",
    "kubernetes",
    "microservices",
    "api",
    "cli",
    "web",
    "security",
    "search",
    "ai",
    "machine-learning",
    "vector-database",
    "semantic-search",
    "devops",
    "ci-cd",
    "github-actions",
    "playwright",
    "testing",
    "monitoring",
    "observability",
    "prometheus",
    "grafana",
    "jaeger",
    "opentelemetry"
  ],
  "author": "MCP Hub Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/mcphub.git"
  },
  "homepage": "https://mcphub.io",
  "bugs": {
    "url": "https://github.com/your-org/mcphub/issues"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "volta": {
    "node": "20.10.0",
    "npm": "10.2.3"
  },
  "packageManager": "npm@10.2.3",
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "@typescript-eslint/typescript-estree": "^6.14.0",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "npm-check-updates": "^16.14.12",
    "playwright": "^1.40.0",
    "prettier": "^3.1.1",
    "standard-version": "^9.5.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "axios": "^1.6.2",
    "dotenv": "^16.3.1",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "uuid": "^9.0.1"
  },
  "optionalDependencies": {
    "fsevents": "^2.3.3"
  },
  "peerDependencies": {
    "react": "^18.0.0",
    "react-dom": "^18.0.0"
  },
  "bundledDependencies": [],
  "files": [
    "build/**/*",
    "dist/**/*",
    "lib/**/*",
    "src/**/*",
    "package.json",
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
  ],
  "directories": {
    "lib": "lib",
    "bin": "bin",
    "doc": "docs",
    "test": "test"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "lint-staged": {
    "*.{js,ts,jsx,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-push": "npm run validate"
    }
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not dead"
  ],
  "eslintConfig": {
    "extends": [
      "./.eslintrc.json"
    ]
  },
  "prettier": "./.prettierrc",
  "jest": {
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/test"
    ],
    "testMatch": [
      "**/__tests__/**/*.test.{js,ts}",
      "**/?(*.)+(spec|test).{js,ts}"
    ],
    "transform": {
      "^.+\\.ts$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.d.ts",
      "!src/**/*.test.{js,ts}",
      "!src/**/*.spec.{js,ts}"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "testTimeout": 10000
  },
  "size-limit": [
    {
      "path": "build/static/js/*.js",
      "limit": "2 MB"
    },
    {
      "path": "build/static/css/*.css",
      "limit": "100 KB"
    }
  ],
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "renovate": {
    "extends": [
      "config:base"
    ],
    "automerge": true,
    "major": {
      "automerge": false
    }
  },
  "release": {
    "branches": [
      "main",
      "master"
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "snyk": true,
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/your-org"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org/",
    "access": "public"
  }
}